/*
* generated by Xtext
*/
package org.modelversioning.emfprofile.decoration.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.modelversioning.emfprofile.decoration.services.EMFProfileDecorationLanguageGrammarAccess;

public class EMFProfileDecorationLanguageParser extends AbstractContentAssistParser {
	
	@Inject
	private EMFProfileDecorationLanguageGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.modelversioning.emfprofile.decoration.ui.contentassist.antlr.internal.InternalEMFProfileDecorationLanguageParser createParser() {
		org.modelversioning.emfprofile.decoration.ui.contentassist.antlr.internal.InternalEMFProfileDecorationLanguageParser result = new org.modelversioning.emfprofile.decoration.ui.contentassist.antlr.internal.InternalEMFProfileDecorationLanguageParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAbstractDecorationAccess().getAlternatives(), "rule__AbstractDecoration__Alternatives");
					put(grammarAccess.getTextAccess().getAlternatives(), "rule__Text__Alternatives");
					put(grammarAccess.getSimpleTextAccess().getAlternatives(), "rule__SimpleText__Alternatives");
					put(grammarAccess.getColorAccess().getAlternatives(), "rule__Color__Alternatives");
					put(grammarAccess.getAbstractConditionAccess().getAlternatives(), "rule__AbstractCondition__Alternatives");
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getComparisonOperatorAccess().getAlternatives(), "rule__ComparisonOperator__Alternatives");
					put(grammarAccess.getLogicalOperatorAccess().getAlternatives(), "rule__LogicalOperator__Alternatives");
					put(grammarAccess.getLineStyleAccess().getAlternatives(), "rule__LineStyle__Alternatives");
					put(grammarAccess.getColorsAccess().getAlternatives(), "rule__Colors__Alternatives");
					put(grammarAccess.getDirectionsAccess().getAlternatives(), "rule__Directions__Alternatives");
					put(grammarAccess.getDecorationModelAccess().getGroup(), "rule__DecorationModel__Group__0");
					put(grammarAccess.getNamespaceAccess().getGroup(), "rule__Namespace__Group__0");
					put(grammarAccess.getDecorationDescriptionAccess().getGroup(), "rule__DecorationDescription__Group__0");
					put(grammarAccess.getImageDecorationAccess().getGroup(), "rule__ImageDecoration__Group__0");
					put(grammarAccess.getImageDecorationAccess().getGroup_3_0(), "rule__ImageDecoration__Group_3_0__0");
					put(grammarAccess.getImageDecorationAccess().getGroup_3_3(), "rule__ImageDecoration__Group_3_3__0");
					put(grammarAccess.getBorderDecorationAccess().getGroup(), "rule__BorderDecoration__Group__0");
					put(grammarAccess.getBorderDecorationAccess().getGroup_3_1(), "rule__BorderDecoration__Group_3_1__0");
					put(grammarAccess.getBackgroundDecorationAccess().getGroup(), "rule__BackgroundDecoration__Group__0");
					put(grammarAccess.getBackgroundDecorationAccess().getGroup_3_0(), "rule__BackgroundDecoration__Group_3_0__0");
					put(grammarAccess.getForegroundDecorationAccess().getGroup(), "rule__ForegroundDecoration__Group__0");
					put(grammarAccess.getForegroundDecorationAccess().getGroup_3_0(), "rule__ForegroundDecoration__Group_3_0__0");
					put(grammarAccess.getConnectionDecorationAccess().getGroup(), "rule__ConnectionDecoration__Group__0");
					put(grammarAccess.getConnectionDecorationAccess().getGroup_3_2(), "rule__ConnectionDecoration__Group_3_2__0");
					put(grammarAccess.getConnectionDecorationAccess().getGroup_3_3(), "rule__ConnectionDecoration__Group_3_3__0");
					put(grammarAccess.getComplexTextAccess().getGroup(), "rule__ComplexText__Group__0");
					put(grammarAccess.getStyleAccess().getGroup(), "rule__Style__Group__0");
					put(grammarAccess.getSizeAccess().getGroup(), "rule__Size__Group__0");
					put(grammarAccess.getDirectionAccess().getGroup(), "rule__Direction__Group__0");
					put(grammarAccess.getMarginAccess().getGroup(), "rule__Margin__Group__0");
					put(grammarAccess.getColorAccess().getGroup_0(), "rule__Color__Group_0__0");
					put(grammarAccess.getConcreteColorAccess().getGroup(), "rule__ConcreteColor__Group__0");
					put(grammarAccess.getActivationAccess().getGroup(), "rule__Activation__Group__0");
					put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
					put(grammarAccess.getCompositeConditionAccess().getGroup(), "rule__CompositeCondition__Group__0");
					put(grammarAccess.getSignedDoubleAccess().getGroup(), "rule__SignedDouble__Group__0");
					put(grammarAccess.getSignedIntegerAccess().getGroup(), "rule__SignedInteger__Group__0");
					put(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup(), "rule__QualifiedNameWithWildcard__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getDecorationModelAccess().getImportURIAssignment_1(), "rule__DecorationModel__ImportURIAssignment_1");
					put(grammarAccess.getDecorationModelAccess().getNamespaceAssignment_2(), "rule__DecorationModel__NamespaceAssignment_2");
					put(grammarAccess.getDecorationModelAccess().getDecorationDescriptionsAssignment_3(), "rule__DecorationModel__DecorationDescriptionsAssignment_3");
					put(grammarAccess.getNamespaceAccess().getProfileAssignment_1(), "rule__Namespace__ProfileAssignment_1");
					put(grammarAccess.getDecorationDescriptionAccess().getStereotypeAssignment_1(), "rule__DecorationDescription__StereotypeAssignment_1");
					put(grammarAccess.getDecorationDescriptionAccess().getDecorationsAssignment_3_0(), "rule__DecorationDescription__DecorationsAssignment_3_0");
					put(grammarAccess.getDecorationDescriptionAccess().getActivationAssignment_3_1(), "rule__DecorationDescription__ActivationAssignment_3_1");
					put(grammarAccess.getImageDecorationAccess().getLocation_uriAssignment_3_0_2(), "rule__ImageDecoration__Location_uriAssignment_3_0_2");
					put(grammarAccess.getImageDecorationAccess().getDirectionAssignment_3_1(), "rule__ImageDecoration__DirectionAssignment_3_1");
					put(grammarAccess.getImageDecorationAccess().getMarginAssignment_3_2(), "rule__ImageDecoration__MarginAssignment_3_2");
					put(grammarAccess.getImageDecorationAccess().getTooltipAssignment_3_3_2(), "rule__ImageDecoration__TooltipAssignment_3_3_2");
					put(grammarAccess.getImageDecorationAccess().getActivationAssignment_3_4(), "rule__ImageDecoration__ActivationAssignment_3_4");
					put(grammarAccess.getBorderDecorationAccess().getSizeAssignment_3_0(), "rule__BorderDecoration__SizeAssignment_3_0");
					put(grammarAccess.getBorderDecorationAccess().getColorAssignment_3_1_2(), "rule__BorderDecoration__ColorAssignment_3_1_2");
					put(grammarAccess.getBorderDecorationAccess().getStyleAssignment_3_2(), "rule__BorderDecoration__StyleAssignment_3_2");
					put(grammarAccess.getBorderDecorationAccess().getActivationAssignment_3_3(), "rule__BorderDecoration__ActivationAssignment_3_3");
					put(grammarAccess.getBackgroundDecorationAccess().getColorAssignment_3_0_2(), "rule__BackgroundDecoration__ColorAssignment_3_0_2");
					put(grammarAccess.getBackgroundDecorationAccess().getActivationAssignment_3_1(), "rule__BackgroundDecoration__ActivationAssignment_3_1");
					put(grammarAccess.getForegroundDecorationAccess().getColorAssignment_3_0_2(), "rule__ForegroundDecoration__ColorAssignment_3_0_2");
					put(grammarAccess.getForegroundDecorationAccess().getActivationAssignment_3_1(), "rule__ForegroundDecoration__ActivationAssignment_3_1");
					put(grammarAccess.getConnectionDecorationAccess().getSizeAssignment_3_0(), "rule__ConnectionDecoration__SizeAssignment_3_0");
					put(grammarAccess.getConnectionDecorationAccess().getStyleAssignment_3_1(), "rule__ConnectionDecoration__StyleAssignment_3_1");
					put(grammarAccess.getConnectionDecorationAccess().getForegroundColorAssignment_3_2_2(), "rule__ConnectionDecoration__ForegroundColorAssignment_3_2_2");
					put(grammarAccess.getConnectionDecorationAccess().getBackgroundColorAssignment_3_3_2(), "rule__ConnectionDecoration__BackgroundColorAssignment_3_3_2");
					put(grammarAccess.getConnectionDecorationAccess().getActivationAssignment_3_4(), "rule__ConnectionDecoration__ActivationAssignment_3_4");
					put(grammarAccess.getSimpleTextAccess().getTextAssignment_0(), "rule__SimpleText__TextAssignment_0");
					put(grammarAccess.getSimpleTextAccess().getAttributeAssignment_1(), "rule__SimpleText__AttributeAssignment_1");
					put(grammarAccess.getComplexTextAccess().getLeftAssignment_0(), "rule__ComplexText__LeftAssignment_0");
					put(grammarAccess.getComplexTextAccess().getRightAssignment_2(), "rule__ComplexText__RightAssignment_2");
					put(grammarAccess.getStyleAccess().getValueAssignment_2(), "rule__Style__ValueAssignment_2");
					put(grammarAccess.getSizeAccess().getValueAssignment_2(), "rule__Size__ValueAssignment_2");
					put(grammarAccess.getDirectionAccess().getValueAssignment_2(), "rule__Direction__ValueAssignment_2");
					put(grammarAccess.getMarginAccess().getValueAssignment_2(), "rule__Margin__ValueAssignment_2");
					put(grammarAccess.getColorAccess().getValueAssignment_0_1(), "rule__Color__ValueAssignment_0_1");
					put(grammarAccess.getColorAccess().getConcreteAssignment_1(), "rule__Color__ConcreteAssignment_1");
					put(grammarAccess.getConcreteColorAccess().getRedAssignment_2(), "rule__ConcreteColor__RedAssignment_2");
					put(grammarAccess.getConcreteColorAccess().getGreenAssignment_4(), "rule__ConcreteColor__GreenAssignment_4");
					put(grammarAccess.getConcreteColorAccess().getBlueAssignment_6(), "rule__ConcreteColor__BlueAssignment_6");
					put(grammarAccess.getColorConstantAccess().getValueAssignment(), "rule__ColorConstant__ValueAssignment");
					put(grammarAccess.getActivationAccess().getConditionAssignment_1(), "rule__Activation__ConditionAssignment_1");
					put(grammarAccess.getConditionAccess().getAttributeAssignment_0(), "rule__Condition__AttributeAssignment_0");
					put(grammarAccess.getConditionAccess().getOperatorAssignment_1(), "rule__Condition__OperatorAssignment_1");
					put(grammarAccess.getConditionAccess().getValueAssignment_2(), "rule__Condition__ValueAssignment_2");
					put(grammarAccess.getCompositeConditionAccess().getOperatorAssignment_0(), "rule__CompositeCondition__OperatorAssignment_0");
					put(grammarAccess.getCompositeConditionAccess().getConditionsAssignment_2(), "rule__CompositeCondition__ConditionsAssignment_2");
					put(grammarAccess.getDecorationDescriptionAccess().getUnorderedGroup_3(), "rule__DecorationDescription__UnorderedGroup_3");
					put(grammarAccess.getImageDecorationAccess().getUnorderedGroup_3(), "rule__ImageDecoration__UnorderedGroup_3");
					put(grammarAccess.getBorderDecorationAccess().getUnorderedGroup_3(), "rule__BorderDecoration__UnorderedGroup_3");
					put(grammarAccess.getBackgroundDecorationAccess().getUnorderedGroup_3(), "rule__BackgroundDecoration__UnorderedGroup_3");
					put(grammarAccess.getForegroundDecorationAccess().getUnorderedGroup_3(), "rule__ForegroundDecoration__UnorderedGroup_3");
					put(grammarAccess.getConnectionDecorationAccess().getUnorderedGroup_3(), "rule__ConnectionDecoration__UnorderedGroup_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.modelversioning.emfprofile.decoration.ui.contentassist.antlr.internal.InternalEMFProfileDecorationLanguageParser typedParser = (org.modelversioning.emfprofile.decoration.ui.contentassist.antlr.internal.InternalEMFProfileDecorationLanguageParser) parser;
			typedParser.entryRuleDecorationModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public EMFProfileDecorationLanguageGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(EMFProfileDecorationLanguageGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
