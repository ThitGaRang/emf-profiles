/*
* generated by Xtext
*/
grammar InternalEMFProfileDecorationLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.modelversioning.emfprofile.decoration.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.modelversioning.emfprofile.decoration.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.modelversioning.emfprofile.decoration.services.EMFProfileDecorationLanguageGrammarAccess;

}

@parser::members {

 	private EMFProfileDecorationLanguageGrammarAccess grammarAccess;
 	
    public InternalEMFProfileDecorationLanguageParser(TokenStream input, EMFProfileDecorationLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DecorationModel";	
   	}
   	
   	@Override
   	protected EMFProfileDecorationLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDecorationModel
entryRuleDecorationModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDecorationModelRule()); }
	 iv_ruleDecorationModel=ruleDecorationModel 
	 { $current=$iv_ruleDecorationModel.current; } 
	 EOF 
;

// Rule DecorationModel
ruleDecorationModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import resource' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDecorationModelAccess().getImportResourceKeyword_0());
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getDecorationModelAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDecorationModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
)(	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDecorationModelAccess().getSemicolonKeyword_2());
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getDecorationModelAccess().getNamespaceNamespaceParserRuleCall_3_0_0()); 
	    }
		lv_namespace_3_0=ruleNamespace		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecorationModelRule());
	        }
       		set(
       			$current, 
       			"namespace",
        		lv_namespace_3_0, 
        		"Namespace");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDecorationModelAccess().getSemicolonKeyword_3_1());
    }
)?)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDecorationModelAccess().getDecorationDescriptionsDecorationDescriptionParserRuleCall_4_0()); 
	    }
		lv_decorationDescriptions_5_0=ruleDecorationDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecorationModelRule());
	        }
       		add(
       			$current, 
       			"decorationDescriptions",
        		lv_decorationDescriptions_5_0, 
        		"DecorationDescription");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleNamespace
entryRuleNamespace returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceRule()); }
	 iv_ruleNamespace=ruleNamespace 
	 { $current=$iv_ruleNamespace.current; } 
	 EOF 
;

// Rule Namespace
ruleNamespace returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='profile' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamespaceAccess().getProfileKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamespaceRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getNamespaceAccess().getProfileProfileCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDecorationDescription
entryRuleDecorationDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDecorationDescriptionRule()); }
	 iv_ruleDecorationDescription=ruleDecorationDescription 
	 { $current=$iv_ruleDecorationDescription.current; } 
	 EOF 
;

// Rule DecorationDescription
ruleDecorationDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='decoration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDecorationDescriptionAccess().getDecorationKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDecorationDescriptionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDecorationDescriptionAccess().getStereotypeStereotypeCrossReference_1_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDecorationDescriptionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDecorationDescriptionAccess().getDecorationsAbstractDecorationParserRuleCall_3_0()); 
	    }
		lv_decorations_3_0=ruleAbstractDecoration		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecorationDescriptionRule());
	        }
       		add(
       			$current, 
       			"decorations",
        		lv_decorations_3_0, 
        		"AbstractDecoration");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDecorationDescriptionAccess().getActivationActivationParserRuleCall_4_0()); 
	    }
		lv_activation_4_0=ruleActivation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDecorationDescriptionRule());
	        }
       		set(
       			$current, 
       			"activation",
        		lv_activation_4_0, 
        		"Activation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDecorationDescriptionAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleAbstractDecoration
entryRuleAbstractDecoration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractDecorationRule()); }
	 iv_ruleAbstractDecoration=ruleAbstractDecoration 
	 { $current=$iv_ruleAbstractDecoration.current; } 
	 EOF 
;

// Rule AbstractDecoration
ruleAbstractDecoration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractDecorationAccess().getIconDecorationParserRuleCall_0()); 
    }
    this_IconDecoration_0=ruleIconDecoration
    { 
        $current = $this_IconDecoration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractDecorationAccess().getBorderDecorationParserRuleCall_1()); 
    }
    this_BorderDecoration_1=ruleBorderDecoration
    { 
        $current = $this_BorderDecoration_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractDecorationAccess().getConnectionDecorationParserRuleCall_2()); 
    }
    this_ConnectionDecoration_2=ruleConnectionDecoration
    { 
        $current = $this_ConnectionDecoration_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleIconDecoration
entryRuleIconDecoration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIconDecorationRule()); }
	 iv_ruleIconDecoration=ruleIconDecoration 
	 { $current=$iv_ruleIconDecoration.current; } 
	 EOF 
;

// Rule IconDecoration
ruleIconDecoration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='icon' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIconDecorationAccess().getIconKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIconDecorationAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='location-uri' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIconDecorationAccess().getLocationUriKeyword_2());
    }
	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIconDecorationAccess().getColonKeyword_3());
    }
(
(
		lv_location_uri_4_0=RULE_STRING
		{
			newLeafNode(lv_location_uri_4_0, grammarAccess.getIconDecorationAccess().getLocation_uriSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIconDecorationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"location_uri",
        		lv_location_uri_4_0, 
        		"STRING");
	    }

)
)(	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIconDecorationAccess().getSemicolonKeyword_5());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIconDecorationAccess().getDirectionDirectionParserRuleCall_6_0()); 
	    }
		lv_direction_6_0=ruleDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIconDecorationRule());
	        }
       		set(
       			$current, 
       			"direction",
        		lv_direction_6_0, 
        		"Direction");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIconDecorationAccess().getMarginMarginParserRuleCall_7_0()); 
	    }
		lv_margin_7_0=ruleMargin		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIconDecorationRule());
	        }
       		set(
       			$current, 
       			"margin",
        		lv_margin_7_0, 
        		"Margin");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getIconDecorationAccess().getActivationActivationParserRuleCall_8_0()); 
	    }
		lv_activation_8_0=ruleActivation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIconDecorationRule());
	        }
       		set(
       			$current, 
       			"activation",
        		lv_activation_8_0, 
        		"Activation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getIconDecorationAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleBorderDecoration
entryRuleBorderDecoration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBorderDecorationRule()); }
	 iv_ruleBorderDecoration=ruleBorderDecoration 
	 { $current=$iv_ruleBorderDecoration.current; } 
	 EOF 
;

// Rule BorderDecoration
ruleBorderDecoration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBorderDecorationAccess().getBorderDecorationAction_0(),
            $current);
    }
)	otherlv_1='border' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBorderDecorationAccess().getBorderKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBorderDecorationAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBorderDecorationAccess().getSizeSizeParserRuleCall_2_1_0()); 
	    }
		lv_size_3_0=ruleSize		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorderDecorationRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"Size");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getBorderDecorationAccess().getColorColorParserRuleCall_2_2_0()); 
	    }
		lv_color_4_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorderDecorationRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_4_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getBorderDecorationAccess().getStyleStyleParserRuleCall_2_3_0()); 
	    }
		lv_style_5_0=ruleStyle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorderDecorationRule());
	        }
       		set(
       			$current, 
       			"style",
        		lv_style_5_0, 
        		"Style");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getBorderDecorationAccess().getActivationActivationParserRuleCall_2_4_0()); 
	    }
		lv_activation_6_0=ruleActivation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBorderDecorationRule());
	        }
       		set(
       			$current, 
       			"activation",
        		lv_activation_6_0, 
        		"Activation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBorderDecorationAccess().getRightCurlyBracketKeyword_2_5());
    }
)?)
;





// Entry rule entryRuleConnectionDecoration
entryRuleConnectionDecoration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectionDecorationRule()); }
	 iv_ruleConnectionDecoration=ruleConnectionDecoration 
	 { $current=$iv_ruleConnectionDecoration.current; } 
	 EOF 
;

// Rule ConnectionDecoration
ruleConnectionDecoration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getConnectionDecorationAccess().getConnectionDecorationAction_0(),
            $current);
    }
)	otherlv_1='connection' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConnectionDecorationAccess().getConnectionKeyword_1());
    }
(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConnectionDecorationAccess().getLeftCurlyBracketKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionDecorationAccess().getSizeSizeParserRuleCall_2_1_0()); 
	    }
		lv_size_3_0=ruleSize		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionDecorationRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"Size");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionDecorationAccess().getColorColorParserRuleCall_2_2_0()); 
	    }
		lv_color_4_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionDecorationRule());
	        }
       		set(
       			$current, 
       			"color",
        		lv_color_4_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_5='foreground' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConnectionDecorationAccess().getForegroundKeyword_2_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionDecorationAccess().getForegroundColorColorParserRuleCall_2_3_1_0()); 
	    }
		lv_foregroundColor_6_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionDecorationRule());
	        }
       		set(
       			$current, 
       			"foregroundColor",
        		lv_foregroundColor_6_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='background' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConnectionDecorationAccess().getBackgroundKeyword_2_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionDecorationAccess().getBackgroundColorColorParserRuleCall_2_4_1_0()); 
	    }
		lv_backgroundColor_8_0=ruleColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionDecorationRule());
	        }
       		set(
       			$current, 
       			"backgroundColor",
        		lv_backgroundColor_8_0, 
        		"Color");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectionDecorationAccess().getActivationActivationParserRuleCall_2_5_0()); 
	    }
		lv_activation_9_0=ruleActivation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectionDecorationRule());
	        }
       		set(
       			$current, 
       			"activation",
        		lv_activation_9_0, 
        		"Activation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getConnectionDecorationAccess().getRightCurlyBracketKeyword_2_6());
    }
)?)
;





// Entry rule entryRuleStyle
entryRuleStyle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStyleRule()); }
	 iv_ruleStyle=ruleStyle 
	 { $current=$iv_ruleStyle.current; } 
	 EOF 
;

// Rule Style
ruleStyle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='style' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStyleAccess().getStyleKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStyleAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStyleAccess().getValueLineStyleEnumRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleLineStyle		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStyleRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"LineStyle");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStyleAccess().getSemicolonKeyword_3());
    }
)?)
;





// Entry rule entryRuleSize
entryRuleSize returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSizeRule()); }
	 iv_ruleSize=ruleSize 
	 { $current=$iv_ruleSize.current; } 
	 EOF 
;

// Rule Size
ruleSize returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='size' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSizeAccess().getSizeKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSizeAccess().getColonKeyword_1());
    }
(
(
		lv_value_2_0=RULE_INT
		{
			newLeafNode(lv_value_2_0, grammarAccess.getSizeAccess().getValueINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSizeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"INT");
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSizeAccess().getSemicolonKeyword_3());
    }
)?)
;





// Entry rule entryRuleDirection
entryRuleDirection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirectionRule()); }
	 iv_ruleDirection=ruleDirection 
	 { $current=$iv_ruleDirection.current; } 
	 EOF 
;

// Rule Direction
ruleDirection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='direction' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDirectionAccess().getDirectionKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDirectionAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDirectionAccess().getValueDirectionsEnumRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleDirections		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDirectionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Directions");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDirectionAccess().getSemicolonKeyword_3());
    }
)?)
;





// Entry rule entryRuleMargin
entryRuleMargin returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMarginRule()); }
	 iv_ruleMargin=ruleMargin 
	 { $current=$iv_ruleMargin.current; } 
	 EOF 
;

// Rule Margin
ruleMargin returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='margin' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMarginAccess().getMarginKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMarginAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMarginAccess().getValueSignedIntegerParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleSignedInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMarginRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"SignedInteger");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMarginAccess().getSemicolonKeyword_3());
    }
)?)
;





// Entry rule entryRuleColor
entryRuleColor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColorRule()); }
	 iv_ruleColor=ruleColor 
	 { $current=$iv_ruleColor.current; } 
	 EOF 
;

// Rule Color
ruleColor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getColorAccess().getColorAction_0_0(),
            $current);
    }
)	otherlv_1='color' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getColorAccess().getColorKeyword_0_1());
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getColorAccess().getColonKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getColorAccess().getValueColorConstantParserRuleCall_0_3_0()); 
	    }
		lv_value_3_0=ruleColorConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColorRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"ColorConstant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_4='color' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getColorAccess().getColorKeyword_1_0());
    }
	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getColorAccess().getColonKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getColorAccess().getConcretConcreteColorParserRuleCall_1_2_0()); 
	    }
		lv_concret_6_0=ruleConcreteColor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColorRule());
	        }
       		set(
       			$current, 
       			"concret",
        		lv_concret_6_0, 
        		"ConcreteColor");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleConcreteColor
entryRuleConcreteColor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcreteColorRule()); }
	 iv_ruleConcreteColor=ruleConcreteColor 
	 { $current=$iv_ruleConcreteColor.current; } 
	 EOF 
;

// Rule ConcreteColor
ruleConcreteColor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RGB' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConcreteColorAccess().getRGBKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConcreteColorAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_red_2_0=RULE_INT
		{
			newLeafNode(lv_red_2_0, grammarAccess.getConcreteColorAccess().getRedINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcreteColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"red",
        		lv_red_2_0, 
        		"INT");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConcreteColorAccess().getCommaKeyword_3());
    }
(
(
		lv_green_4_0=RULE_INT
		{
			newLeafNode(lv_green_4_0, grammarAccess.getConcreteColorAccess().getGreenINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcreteColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"green",
        		lv_green_4_0, 
        		"INT");
	    }

)
)	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConcreteColorAccess().getCommaKeyword_5());
    }
(
(
		lv_blue_6_0=RULE_INT
		{
			newLeafNode(lv_blue_6_0, grammarAccess.getConcreteColorAccess().getBlueINTTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConcreteColorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"blue",
        		lv_blue_6_0, 
        		"INT");
	    }

)
)	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConcreteColorAccess().getRightParenthesisKeyword_7());
    }
(	otherlv_8=';' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getConcreteColorAccess().getSemicolonKeyword_8());
    }
)?)
;





// Entry rule entryRuleColorConstant
entryRuleColorConstant returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getColorConstantRule()); }
	 iv_ruleColorConstant=ruleColorConstant 
	 { $current=$iv_ruleColorConstant.current; } 
	 EOF 
;

// Rule ColorConstant
ruleColorConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getColorConstantAccess().getValueColorsEnumRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleColors		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getColorConstantRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"Colors");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getColorConstantAccess().getSemicolonKeyword_1());
    }
)?)
;





// Entry rule entryRuleActivation
entryRuleActivation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActivationRule()); }
	 iv_ruleActivation=ruleActivation 
	 { $current=$iv_ruleActivation.current; } 
	 EOF 
;

// Rule Activation
ruleActivation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='active when' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActivationAccess().getActiveWhenKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivationAccess().getConditionAbstractConditionParserRuleCall_1_0()); 
	    }
		lv_condition_1_0=ruleAbstractCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivationRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"AbstractCondition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAbstractCondition
entryRuleAbstractCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractConditionRule()); }
	 iv_ruleAbstractCondition=ruleAbstractCondition 
	 { $current=$iv_ruleAbstractCondition.current; } 
	 EOF 
;

// Rule AbstractCondition
ruleAbstractCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractConditionAccess().getConditionParserRuleCall_0()); 
    }
    this_Condition_0=ruleCondition
    { 
        $current = $this_Condition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractConditionAccess().getCompositeConditionParserRuleCall_1()); 
    }
    this_CompositeCondition_1=ruleCompositeCondition
    { 
        $current = $this_CompositeCondition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	 iv_ruleCondition=ruleCondition 
	 { $current=$iv_ruleCondition.current; } 
	 EOF 
;

// Rule Condition
ruleCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getAttributeEAttributeCrossReference_0_0()); 
	    }
		ruleQualifiedName		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getOperatorComparisonOperatorEnumRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleComparisonOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"ComparisonOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionAccess().getValueTypeParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConditionAccess().getSemicolonKeyword_3());
    }
)?)
;





// Entry rule entryRuleCompositeCondition
entryRuleCompositeCondition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompositeConditionRule()); }
	 iv_ruleCompositeCondition=ruleCompositeCondition 
	 { $current=$iv_ruleCompositeCondition.current; } 
	 EOF 
;

// Rule CompositeCondition
ruleCompositeCondition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeConditionAccess().getOperatorLogicalOperatorEnumRuleCall_0_0()); 
	    }
		lv_operator_0_0=ruleLogicalOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeConditionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"LogicalOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCompositeConditionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompositeConditionAccess().getConditionsAbstractConditionParserRuleCall_2_0()); 
	    }
		lv_conditions_2_0=ruleAbstractCondition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompositeConditionRule());
	        }
       		add(
       			$current, 
       			"conditions",
        		lv_conditions_2_0, 
        		"AbstractCondition");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCompositeConditionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleType
entryRuleType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); } 
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current.getText(); }  
	 EOF 
;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getSignedIntegerParserRuleCall_0()); 
    }
    this_SignedInteger_0=ruleSignedInteger    {
		$current.merge(this_SignedInteger_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getSignedDoubleParserRuleCall_1()); 
    }
    this_SignedDouble_1=ruleSignedDouble    {
		$current.merge(this_SignedDouble_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |    this_STRING_2=RULE_STRING    {
		$current.merge(this_STRING_2);
    }

    { 
    newLeafNode(this_STRING_2, grammarAccess.getTypeAccess().getSTRINGTerminalRuleCall_2()); 
    }

    |    this_BOOLEAN_3=RULE_BOOLEAN    {
		$current.merge(this_BOOLEAN_3);
    }

    { 
    newLeafNode(this_BOOLEAN_3, grammarAccess.getTypeAccess().getBOOLEANTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleSignedDouble
entryRuleSignedDouble returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignedDoubleRule()); } 
	 iv_ruleSignedDouble=ruleSignedDouble 
	 { $current=$iv_ruleSignedDouble.current.getText(); }  
	 EOF 
;

// Rule SignedDouble
ruleSignedDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedDoubleAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getSignedDoubleAccess().getINTTerminalRuleCall_1()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedDoubleAccess().getFullStopKeyword_2()); 
    }
    this_INT_3=RULE_INT    {
		$current.merge(this_INT_3);
    }

    { 
    newLeafNode(this_INT_3, grammarAccess.getSignedDoubleAccess().getINTTerminalRuleCall_3()); 
    }
)
    ;





// Entry rule entryRuleSignedInteger
entryRuleSignedInteger returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignedIntegerRule()); } 
	 iv_ruleSignedInteger=ruleSignedInteger 
	 { $current=$iv_ruleSignedInteger.current.getText(); }  
	 EOF 
;

// Rule SignedInteger
ruleSignedInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedIntegerAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getSignedIntegerAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;







// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); } 
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current.getText(); }  
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule ComparisonOperator
ruleComparisonOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='==' 
	{
        $current = grammarAccess.getComparisonOperatorAccess().getEQUALEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getComparisonOperatorAccess().getEQUALEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='!=' 
	{
        $current = grammarAccess.getComparisonOperatorAccess().getUNEQUALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getComparisonOperatorAccess().getUNEQUALEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='>' 
	{
        $current = grammarAccess.getComparisonOperatorAccess().getGREATEREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getComparisonOperatorAccess().getGREATEREnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='>=' 
	{
        $current = grammarAccess.getComparisonOperatorAccess().getGREATEROREQUALEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getComparisonOperatorAccess().getGREATEROREQUALEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='<' 
	{
        $current = grammarAccess.getComparisonOperatorAccess().getLOWEREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getComparisonOperatorAccess().getLOWEREnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='<=' 
	{
        $current = grammarAccess.getComparisonOperatorAccess().getLOWEROREQUALEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getComparisonOperatorAccess().getLOWEROREQUALEnumLiteralDeclaration_5()); 
    }
));



// Rule LogicalOperator
ruleLogicalOperator returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='all' 
	{
        $current = grammarAccess.getLogicalOperatorAccess().getALLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLogicalOperatorAccess().getALLEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='any' 
	{
        $current = grammarAccess.getLogicalOperatorAccess().getANYEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLogicalOperatorAccess().getANYEnumLiteralDeclaration_1()); 
    }
));



// Rule LineStyle
ruleLineStyle returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='solid' 
	{
        $current = grammarAccess.getLineStyleAccess().getLINE_SOLIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLineStyleAccess().getLINE_SOLIDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='dots' 
	{
        $current = grammarAccess.getLineStyleAccess().getLINE_DOTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLineStyleAccess().getLINE_DOTEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='dashes' 
	{
        $current = grammarAccess.getLineStyleAccess().getLINE_DASHEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getLineStyleAccess().getLINE_DASHEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='dash_dots' 
	{
        $current = grammarAccess.getLineStyleAccess().getLINE_DASHDOTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getLineStyleAccess().getLINE_DASHDOTEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='dash_dot_dot' 
	{
        $current = grammarAccess.getLineStyleAccess().getLINE_DASHDOTDOTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getLineStyleAccess().getLINE_DASHDOTDOTEnumLiteralDeclaration_4()); 
    }
));



// Rule Colors
ruleColors returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='red' 
	{
        $current = grammarAccess.getColorsAccess().getREDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getColorsAccess().getREDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='black' 
	{
        $current = grammarAccess.getColorsAccess().getBLACKEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getColorsAccess().getBLACKEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='white' 
	{
        $current = grammarAccess.getColorsAccess().getWHITEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getColorsAccess().getWHITEEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='green' 
	{
        $current = grammarAccess.getColorsAccess().getGREENEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getColorsAccess().getGREENEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='green_light' 
	{
        $current = grammarAccess.getColorsAccess().getGREEN_LIGHTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getColorsAccess().getGREEN_LIGHTEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='green_dark' 
	{
        $current = grammarAccess.getColorsAccess().getGREEN_DARKEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getColorsAccess().getGREEN_DARKEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='blue' 
	{
        $current = grammarAccess.getColorsAccess().getBLUEEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getColorsAccess().getBLUEEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='blue_light' 
	{
        $current = grammarAccess.getColorsAccess().getBLUE_LIGHTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getColorsAccess().getBLUE_LIGHTEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='blue_dark' 
	{
        $current = grammarAccess.getColorsAccess().getBLUE_DARKEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getColorsAccess().getBLUE_DARKEnumLiteralDeclaration_8()); 
    }
)
    |(	enumLiteral_9='gray' 
	{
        $current = grammarAccess.getColorsAccess().getGRAYEnumLiteralDeclaration_9().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_9, grammarAccess.getColorsAccess().getGRAYEnumLiteralDeclaration_9()); 
    }
)
    |(	enumLiteral_10='gray_light' 
	{
        $current = grammarAccess.getColorsAccess().getGRAY_LIGHTEnumLiteralDeclaration_10().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_10, grammarAccess.getColorsAccess().getGRAY_LIGHTEnumLiteralDeclaration_10()); 
    }
)
    |(	enumLiteral_11='gray_dark' 
	{
        $current = grammarAccess.getColorsAccess().getGRAY_DARKEnumLiteralDeclaration_11().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_11, grammarAccess.getColorsAccess().getGRAY_DARKEnumLiteralDeclaration_11()); 
    }
)
    |(	enumLiteral_12='orange' 
	{
        $current = grammarAccess.getColorsAccess().getORANGEEnumLiteralDeclaration_12().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_12, grammarAccess.getColorsAccess().getORANGEEnumLiteralDeclaration_12()); 
    }
)
    |(	enumLiteral_13='yellow' 
	{
        $current = grammarAccess.getColorsAccess().getYELLOWEnumLiteralDeclaration_13().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_13, grammarAccess.getColorsAccess().getYELLOWEnumLiteralDeclaration_13()); 
    }
)
    |(	enumLiteral_14='cyan' 
	{
        $current = grammarAccess.getColorsAccess().getCYANEnumLiteralDeclaration_14().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_14, grammarAccess.getColorsAccess().getCYANEnumLiteralDeclaration_14()); 
    }
));



// Rule Directions
ruleDirections returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='center' 
	{
        $current = grammarAccess.getDirectionsAccess().getCENTEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getDirectionsAccess().getCENTEREnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='north' 
	{
        $current = grammarAccess.getDirectionsAccess().getNORHTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getDirectionsAccess().getNORHTEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='south' 
	{
        $current = grammarAccess.getDirectionsAccess().getSOUTHEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getDirectionsAccess().getSOUTHEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='west' 
	{
        $current = grammarAccess.getDirectionsAccess().getWESTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getDirectionsAccess().getWESTEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='east' 
	{
        $current = grammarAccess.getDirectionsAccess().getEASTEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getDirectionsAccess().getEASTEnumLiteralDeclaration_4()); 
    }
)
    |(	enumLiteral_5='north_east' 
	{
        $current = grammarAccess.getDirectionsAccess().getNORTH_EASTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_5, grammarAccess.getDirectionsAccess().getNORTH_EASTEnumLiteralDeclaration_5()); 
    }
)
    |(	enumLiteral_6='north_west' 
	{
        $current = grammarAccess.getDirectionsAccess().getNORTH_WESTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_6, grammarAccess.getDirectionsAccess().getNORTH_WESTEnumLiteralDeclaration_6()); 
    }
)
    |(	enumLiteral_7='south_east' 
	{
        $current = grammarAccess.getDirectionsAccess().getSOUTH_EASTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_7, grammarAccess.getDirectionsAccess().getSOUTH_EASTEnumLiteralDeclaration_7()); 
    }
)
    |(	enumLiteral_8='south_west' 
	{
        $current = grammarAccess.getDirectionsAccess().getSOUTH_WESTEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_8, grammarAccess.getDirectionsAccess().getSOUTH_WESTEnumLiteralDeclaration_8()); 
    }
));



RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


